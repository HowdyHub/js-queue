0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.14.7
3 info using node@v4.2.2
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/home/bmiller/git/js-queue',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/bmiller/.npm/js-queue/0.1.1/package.tgz not in flight; packing
9 verbose tar pack [ '/home/bmiller/.npm/js-queue/0.1.1/package.tgz',
9 verbose tar pack   '/home/bmiller/git/js-queue' ]
10 verbose tarball /home/bmiller/.npm/js-queue/0.1.1/package.tgz
11 verbose folder /home/bmiller/git/js-queue
12 info prepublish js-queue@0.1.1
13 verbose addLocalTarball adding from inside cache /home/bmiller/.npm/js-queue/0.1.1/package.tgz
14 silly cache afterAdd js-queue@0.1.1
15 verbose afterAdd /home/bmiller/.npm/js-queue/0.1.1/package/package.json not in flight; writing
16 verbose afterAdd /home/bmiller/.npm/js-queue/0.1.1/package/package.json written
17 silly publish { name: 'js-queue',
17 silly publish   version: '0.1.1',
17 silly publish   description: 'Simple JS queue with auto run for node and browsers',
17 silly publish   main: 'queue.js',
17 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
17 silly publish   engines: { node: '>=0.13.0' },
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'git+https://github.com/RIAEvangelist/js-queue.git' },
17 silly publish   keywords:
17 silly publish    [ 'queue',
17 silly publish      'node',
17 silly publish      'js',
17 silly publish      'auto',
17 silly publish      'run',
17 silly publish      'execute',
17 silly publish      'browser',
17 silly publish      'react' ],
17 silly publish   author: { name: 'Brandon Nozaki Miller' },
17 silly publish   license: 'DBAD',
17 silly publish   bugs: { url: 'https://github.com/RIAEvangelist/js-queue/issues' },
17 silly publish   homepage: 'https://github.com/RIAEvangelist/js-queue#readme',
17 silly publish   readme: '# js-queue Is Great for any queue\n\n1. socket message queuing\n2. async operations\n3. synchronous operations\n4. atomic operations\n3. code with requirements before executing\n4. queues you want to start running any time you add new items\n5. any simple or complex queue operations\n6. base class to extend\n7. anything else that needs a queue\n\n\n# Stable and easy to use\nWorks great in node.js, webpack, browserify, or any other commonjs loader or compiler. To use in plain old vanilla browser javascript without common js just replace the requires in the examples with script tags. We show that below too.\n\n**npm install js-queue**\n\nnpm info :  [See npm trends and stats for js-queue](http://npm-stat.com/charts.html?package=js-queue&author=&from=&to=)  \n![js-queue npm version](https://img.shields.io/npm/v/js-queue.svg) ![supported node version for js-queue](https://img.shields.io/node/v/js-queue.svg) ![total npm downloads for js-queue](https://img.shields.io/npm/dt/js-queue.svg) ![monthly npm downloads for js-queue](https://img.shields.io/npm/dm/js-queue.svg) ![npm licence for js-queue](https://img.shields.io/npm/l/js-queue.svg)\n\n[![RIAEvangelist](https://avatars3.githubusercontent.com/u/369041?v=3&s=100)](https://github.com/RIAEvangelist)\n\nGitHub info :  \n![js-queue GitHub Release](https://img.shields.io/github/release/RIAEvangelist/js-queue.svg) ![GitHub license js-queue license](https://img.shields.io/github/license/RIAEvangelist/js-queue.svg) ![open issues for js-queue on GitHub](https://img.shields.io/github/issues/RIAEvangelist/js-queue.svg)\n\nPackage details websites :\n* [GitHub.io site](http://riaevangelist.github.io/js-queue/ "js-queue documentation"). A prettier version of this site.\n* [NPM Module](https://www.npmjs.org/package/js-queue "js-queue npm module"). The npm page for the js-queue module.\n\nThis work is licenced via the [DBAD Public Licence](http://www.dbad-license.org/).\n\n## Exposed methods and values\n\n|key|type|paramaters|default|description|\n|----|----|----|----|----|\n|add|function|any number of functions|  |adds all parameter functions to queue and starts execution if autoRun is true, queue is not already running and queue is not forcibly stopped |\n|next|function|  |  |executes next item in queue if queue is not forcibly stopped|\n|clear|function|  |  |removes remaining items in the queue|\n|contents|Array|  |  | Queue instance contents | \n|autoRun|Bool|  | true |should autoRun queue when new item added|\n|stop|Bool|  | false |setting this to true will forcibly prevent the queue from executing|\n\n### Basic queue use in node, react, browserify, webpack or any other commonjs implementation\n\n```javascript\n\n    var Queue=require(\'js-queue\');\n    //create a new queue instance\n    var queue=new Queue;\n    \n    for(var i=0; i<50; i++){\n        //add a bunch of stuff to the queue\n        queue.add(makeRequest);\n    }\n    \n    function makeRequest(){\n        //do stuff\n        console.log(\'making some request\');\n        \n        this.next();\n    }\n    \n```\n\n### Basic browser use\n\nThe only difference is including via a script tag instead of using require.\n\n```html\n\n    <html>\n            <head>\n                    <!-- this is the only difference -->\n                    <script src=\'./queue.js\'></script>\n                    <script>\n                            console.log(\'my awesome app script\');\n                            var queue=new Queue;\n                            \n                            for(var i=0; i<50; i++){\n                                queue.add(makeRequest);\n                            }\n                            \n                            function makeRequest(){\n                                console.log(\'making some request\');\n                                \n                                this.next();\n                            }\n                    </script>\n            </head>\n            <body>\n            </body>\n    </html>\n    \n```\n\n### Basic use with websockets in node, react, browserify, webpack or any other commonjs implementation\n\nThis allows you to start adding requests immediately and only execute if the websocket is connected. To use in plain browser based JS without webpack or browserify just replace the requires with the script tag.\n\n```javascript\n\n    var Queue=require(\'js-queue\');\n    \n    //ws-share just makes it easier to share websocket code and ensure you don\'t open a websocket more than once \n    var WS=require(\'ws-share\');\n    \n    //js-message makes it easy to create and parse normalized JSON messages. \n    var Message=require(\'js-message\');\n    \n    //create a new queue instance\n    var queue=new Queue;\n    \n    //force stop until websocket opened\n    queue.stop=true;\n    \n    var ws=null;\n    \n    function startWS(){\n        //websocket.org rocks\n        ws=new WS(\'wss://echo.websocket.org/?encoding=text\');\n        \n        ws.on(\n            \'open\',\n            function(){\n                ws.on(\n                    \'message\',\n                    handleResponse\n                );\n                \n                //now that websocket is opened allow auto execution\n                queue.stop=false;\n                queue.next();\n            }\n        );\n\n        ws.on(\n            \'error\',\n            function(err){\n                //stop execution of queue if there is an error because the websocket is likely closed\n                queue.stop=true;\n                //remove remaining items in the queue\n                queue.clear();\n                throw(err);\n            }\n        );\n    \n        ws.on(\n            \'close\',\n            function(){\n                //stop execution of queue when the websocket closed\n                queue.stop=true;\n            }\n        );\n    }\n    \n    //simulate a lot of requests being queued up for the websocket\n    for(var i=0; i<50; i++){\n        queue.add(makeRequest);\n    }\n    \n    var messageID=0;\n    \n    function handleResponse(e){\n        var message=new Message;\n        message.load(e.data);\n        \n        console.log(message.type,message.data);\n    }\n    \n    function makeRequest(){\n        messageID++;\n        var message=new Message;\n        message.type=\'testMessage\';\n        message.data=messageID;\n        \n        ws.send(message.JSON);\n        \n        this.next();\n    }\n\n    startWS();\n    \n```\n\n\n# Extending Queue\n\n```javascript\n\n    var Queue=require(\'js-queue\');\n    \n    function MyAwesomeQueue(){\n        //merge this and Queue inorder to extend \n        Object.assign(this,new Queue);\n        \n        //extend with some stuff your app needs, maybe npm publish your extention with js-queue as a dependancy? \n        Object.defineProperties(\n            this,\n            {\n                isStopped:{\n                    enumerable:true,\n                    get:checkStopped,\n                    set:checkStopped\n                },\n                removeThirdItem:{ \n                    enumerable:true,\n                    writable:false,\n                    value:removeThird\n                }\n            }\n        );\n        \n        //enforce Object.assign for extending by locking down Class structure\n        //no willy nilly cowboy coding\n        Object.seal(this);\n        \n        function checkStopped(){\n            return this.stop;\n        }\n        \n        function removeThird(){\n            //get the queue content\n            var list=this.contents;\n            //modify the queue content\n            list.splice(2,1);\n            //save the modified queue content\n            this.contents=list;\n            \n            return this.contents;\n        }\n    }\n    \n```\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: 'bbaf26108200d6301b14230176ac57824f2e6f08',
17 silly publish   _id: 'js-queue@0.1.1',
17 silly publish   _shasum: '42d1998d19e7eee8867be4ce0cfe94a2fad6f303',
17 silly publish   _from: '.' }
18 verbose getPublishConfig undefined
19 silly mapToRegistry name js-queue
20 silly mapToRegistry using default registry
21 silly mapToRegistry registry https://registry.npmjs.org/
22 silly mapToRegistry uri https://registry.npmjs.org/js-queue
23 verbose publish registryBase https://registry.npmjs.org/
24 silly publish uploading /home/bmiller/.npm/js-queue/0.1.1/package.tgz
25 verbose request uri https://registry.npmjs.org/js-queue
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 14:30:36
28 verbose request id 7f086e96ae7f5754
29 http request PUT https://registry.npmjs.org/js-queue
30 http 403 https://registry.npmjs.org/js-queue
31 verbose headers { 'content-type': 'application/json',
31 verbose headers   'cache-control': 'max-age=60',
31 verbose headers   'content-length': '95',
31 verbose headers   'accept-ranges': 'bytes',
31 verbose headers   date: 'Fri, 04 Dec 2015 22:30:36 GMT',
31 verbose headers   via: '1.1 varnish',
31 verbose headers   connection: 'keep-alive',
31 verbose headers   'x-served-by': 'cache-lax1426-LAX',
31 verbose headers   'x-cache': 'MISS',
31 verbose headers   'x-cache-hits': '0',
31 verbose headers   'x-timer': 'S1449268236.582985,VS0,VE206' }
32 verbose request invalidating /home/bmiller/.npm/registry.npmjs.org/js-queue on PUT
33 error publish Failed PUT 403
34 verbose stack Error: "You cannot publish over the previously published version 0.1.1." : js-queue
34 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
34 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
34 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
34 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:198:22)
34 verbose stack     at emitTwo (events.js:87:13)
34 verbose stack     at Request.emit (events.js:172:7)
34 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1063:14)
34 verbose stack     at emitOne (events.js:82:20)
34 verbose stack     at Request.emit (events.js:169:7)
34 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1009:12)
35 verbose statusCode 403
36 verbose pkgid js-queue
37 verbose cwd /home/bmiller/git/js-queue
38 error Linux 4.2.0-18-generic
39 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
40 error node v4.2.2
41 error npm  v2.14.7
42 error code E403
43 error "You cannot publish over the previously published version 0.1.1." : js-queue
44 error If you need help, you may report this error at:
44 error     <https://github.com/npm/npm/issues>
45 verbose exit [ 1, true ]
